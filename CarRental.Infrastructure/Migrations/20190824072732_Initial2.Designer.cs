// <auto-generated />
using System;
using CarRental.Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Infrastructure.Migrations
{
    [DbContext(typeof(RentalContext))]
    [Migration("20190824072732_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRental.Model.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("CarCategoryId");

                    b.Property<string>("Color");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Mileage");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedAt");

                    b.Property<int>("ProductionYear");

                    b.HasKey("Id");

                    b.HasIndex("CarCategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Audi",
                            CarCategoryId = 4,
                            Color = "Black",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(6669),
                            IsDeleted = false,
                            Mileage = 10500,
                            Model = "A4",
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 2,
                            Brand = "BMW",
                            CarCategoryId = 3,
                            Color = "Red",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8404),
                            IsDeleted = false,
                            Mileage = 100500,
                            Model = "320d",
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Mazda",
                            CarCategoryId = 3,
                            Color = "Black",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Mileage = 12500,
                            Model = "3",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Audi",
                            CarCategoryId = 4,
                            Color = "Blue",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Mileage = 25500,
                            Model = "A7",
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Mercedes",
                            CarCategoryId = 3,
                            Color = "Black",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Mileage = 150000,
                            Model = "c200",
                            ProductionYear = 2013
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Citroen",
                            CarCategoryId = 4,
                            Color = "Yellow",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Mileage = 107500,
                            Model = "c3",
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Peugeot",
                            CarCategoryId = 3,
                            Color = "Red",
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 138, DateTimeKind.Utc).AddTicks(8432),
                            IsDeleted = false,
                            Mileage = 100500,
                            Model = "307",
                            ProductionYear = 2015
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.CarCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CarCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(3359),
                            IsDeleted = false,
                            Name = "van"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(3706),
                            IsDeleted = false,
                            Name = "mini-van"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(3712),
                            IsDeleted = false,
                            Name = "limousine"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(3712),
                            IsDeleted = false,
                            Name = "hatchback"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(3712),
                            IsDeleted = false,
                            Name = "coupe"
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Zip")
                        .IsUnique();

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9367),
                            IsDeleted = false,
                            Name = "Sisak",
                            Zip = "44000"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9964),
                            IsDeleted = false,
                            Name = "Zagreb",
                            Zip = "10000"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9970),
                            IsDeleted = false,
                            Name = "Velika Gorica",
                            Zip = "10410"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9970),
                            IsDeleted = false,
                            Name = "Osijek",
                            Zip = "31000"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9970),
                            IsDeleted = false,
                            Name = "Slavonski Brod",
                            Zip = "35000"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9970),
                            IsDeleted = false,
                            Name = "Rijeka",
                            Zip = "51000"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9970),
                            IsDeleted = false,
                            Name = "Varaždin",
                            Zip = "42000"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Krapina",
                            Zip = "49000"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Split",
                            Zip = "21000"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Dubrovnik",
                            Zip = "20000"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Trogir",
                            Zip = "21220"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Šibenik",
                            Zip = "22000"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Vukovar",
                            Zip = "32000"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 140, DateTimeKind.Utc).AddTicks(9976),
                            IsDeleted = false,
                            Name = "Vinkovci",
                            Zip = "37000"
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired();

                    b.Property<string>("DrivingLicenceNumber")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedAt");

                    b.HasKey("Id");

                    b.HasIndex("DrivingLicenceNumber")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(7951),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "11111111",
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastName = "Ivanovic"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9322),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "22222222",
                            FirstName = "Marko",
                            IsDeleted = false,
                            LastName = "Marković"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9339),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "33333333",
                            FirstName = "Josip",
                            IsDeleted = false,
                            LastName = "Josipović"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9339),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "44444444",
                            FirstName = "Pero",
                            IsDeleted = false,
                            LastName = "Perić"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9339),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "55555555",
                            FirstName = "Matko",
                            IsDeleted = false,
                            LastName = "Matković"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9339),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "88888888",
                            FirstName = "Ivica",
                            IsDeleted = false,
                            LastName = "Ivić"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9339),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "99999999",
                            FirstName = "Davor",
                            IsDeleted = false,
                            LastName = "Davorić"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9345),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "12121212",
                            FirstName = "Dario",
                            IsDeleted = false,
                            LastName = "Dariović"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 141, DateTimeKind.Utc).AddTicks(9345),
                            DateOfBirth = new DateTime(1990, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenceNumber = "12312312",
                            FirstName = "Dorian",
                            IsDeleted = false,
                            LastName = "Dorianović"
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(2793),
                            IsDeleted = false,
                            Name = "Vukovarska 4c"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3373),
                            IsDeleted = false,
                            Name = "Zagrebačka 5"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 4,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3384),
                            IsDeleted = false,
                            Name = "Petrova 5"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3384),
                            IsDeleted = false,
                            Name = "Sisačka 13"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 7,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3384),
                            IsDeleted = false,
                            Name = "Slavonska 4c"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 8,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3384),
                            IsDeleted = false,
                            Name = "Petrinjska 4c"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 142, DateTimeKind.Utc).AddTicks(3384),
                            IsDeleted = false,
                            Name = "Vukovarska 15c"
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerId");

                    b.Property<int>("DropOffLocationId");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedAt");

                    b.Property<int>("PickUpLocationId");

                    b.Property<string>("Remarks");

                    b.Property<bool>("Reserved");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DropOffLocationId");

                    b.HasIndex("PickUpLocationId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(2646),
                            CustomerId = 3,
                            DropOffLocationId = 3,
                            EndDate = new DateTime(2015, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 2,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2015, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4756),
                            CustomerId = 5,
                            DropOffLocationId = 4,
                            EndDate = new DateTime(2016, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2016, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CarId = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4779),
                            CustomerId = 6,
                            DropOffLocationId = 3,
                            EndDate = new DateTime(2018, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2018, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CarId = 2,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4785),
                            CustomerId = 2,
                            DropOffLocationId = 2,
                            EndDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2019, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CarId = 6,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4785),
                            CustomerId = 2,
                            DropOffLocationId = 2,
                            EndDate = new DateTime(2019, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CarId = 5,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4785),
                            CustomerId = 2,
                            DropOffLocationId = 2,
                            EndDate = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2019, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CarId = 4,
                            CreatedAt = new DateTime(2019, 8, 24, 7, 27, 32, 143, DateTimeKind.Utc).AddTicks(4785),
                            CustomerId = 2,
                            DropOffLocationId = 2,
                            EndDate = new DateTime(2019, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PickUpLocationId = 1,
                            Remarks = "blah blah",
                            Reserved = true,
                            StartDate = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarRental.Model.Models.Car", b =>
                {
                    b.HasOne("CarRental.Model.Models.CarCategory", "CarCategory")
                        .WithMany()
                        .HasForeignKey("CarCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CarRental.Model.Models.Location", b =>
                {
                    b.HasOne("CarRental.Model.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CarRental.Model.Models.Rental", b =>
                {
                    b.HasOne("CarRental.Model.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRental.Model.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRental.Model.Models.Location", "DropOffLocation")
                        .WithMany()
                        .HasForeignKey("DropOffLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRental.Model.Models.Location", "PickUpLocation")
                        .WithMany()
                        .HasForeignKey("PickUpLocationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
